var HOST=location.origin.replace(/^http/,"ws"),ws=new WebSocket(HOST,"echo-protocol");ws.addEventListener("message",function(e){handleMessage(JSON.parse(e.data))});var mainContainer=document.querySelector("#main-container"),users_online=[],mainComponent=void 0;function handleMessage(e){var t=void 0;switch(e.type){case"set-name-result":"ok"==e.result&&mainComponent.setState({mode:"users-list"});break;case"current-player-list":users_online=e.names.copyWithin(),mainComponent.elements.users_list&&mainComponent.elements.users_list.update();break;case"player-join":users_online.push(e.name),mainComponent.elements.users_list&&mainComponent.elements.users_list.update();break;case"player-leave":users_online.pop(e.name),mainComponent.elements.users_list&&mainComponent.elements.users_list.update();break;case"play-request-from":if(!mainComponent.elements.users_list.buttons[e.name])return;mainComponent.elements.users_list.buttons[e.name].setState({type:"accept"});break;case"play-request-cancel-from":if(!mainComponent.elements.users_list.buttons[e.name])return;mainComponent.elements.users_list.buttons[e.name].setState({type:"send"});break;case"get-ready-to-play":mainComponent.setState({mode:"game-board",boardColor:e.color}),ws.send(JSON.stringify({type:"ready-to-play"}));break;case"opponent-resigned":alert("Opponent resigned. You win!"),mainComponent.setState({mode:"users-list"});break;case"opponent-disconnected":alert("Opponent disconnected. You win!"),mainComponent.setState({mode:"users-list"});break;case"move":var n=e.prevX,s=e.prevY,a=e.newX,o=e.newY;t=mainComponent.elements["game-board"].state.pieces.copyWithin();var r=!0,i=!1,m=void 0;try{for(var l,p=t[Symbol.iterator]();!(r=(l=p.next()).done);r=!0){var u=l.value;if(u.x==n&&u.y==s){u.x=a,u.y=o,mainComponent.elements["game-board"].setState({pieces:t});break}}}catch(e){i=!0,m=e}finally{try{!r&&p.return&&p.return()}finally{if(i)throw m}}break;case"fire":var c=e.x,d=e.y;(t=mainComponent.elements["game-board"].state.pieces.copyWithin()).push({x:c,y:d,type:"fire"}),mainComponent.elements["game-board"].setState({pieces:t,phase:0});break;case"you-won":alert("You win!"),mainComponent.setState({mode:"users-list"});break;case"you-lost":alert("You lose!"),mainComponent.setState({mode:"users-list"})}}function onResize(e){mainComponent.setState({})}ReactDOM.render(React.createElement(MultiComponent,{boardSize:"500",listWidth:"300",listElemHeight:"30"}),mainContainer),window.addEventListener("resize",onResize);
